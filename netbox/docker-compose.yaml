services:
  netbox:
    image: docker.io/netboxcommunity/netbox:${VERSION-v4.3-3.3.0}
    depends_on:
      - postgres
      - redis
      - redis-cache

    ports:
      - 9458:8080

    environment: &ref_0
      - CORS_ORIGIN_ALLOW_ALL=True
      - DB_HOST=postgres
      - DB_NAME=${POSTGRES_DB}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_USER=${POSTGRES_USER}
      - GRAPHQL_ENABLED=true
      - HOUSEKEEPING_INTERVAL=86400
      - MEDIA_ROOT=${REMOTE_MOUNT_DIR}/media
      - REDIS_CACHE_DATABASE=1
      - REDIS_CACHE_HOST=redis-cache
      - REDIS_CACHE_INSECURE_SKIP_TLS_VERIFY=false
      - REDIS_CACHE_PASSWORD=${REDIS_CACHE_PASSWORD}
      - REDIS_CACHE_SSL=false
      - REDIS_DATABASE=0
      - REDIS_HOST=redis
      - REDIS_INSECURE_SKIP_TLS_VERIFY=false
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_SSL=false
      - RELEASE_CHECK_URL=https://api.github.com/repos/netbox-community/netbox/releases
      - SECRET_KEY=${SECRET_KEY}
      - WEBHOOKS_ENABLED=true
      - SKIP_SUPERUSER=false
      - SUPERUSER_EMAIL=${SUPERUSER_EMAIL}
      - SUPERUSER_NAME=${SUPERUSER_NAME}
      - SUPERUSER_PASSWORD=${SUPERUSER_PASSWORD}
      # - PUID=${USER_ID}
      # - PGID=${GROUP_ID}

    user: 'unit:root'

    healthcheck:
      start_period: 60s
      timeout: 3s
      interval: 15s
      test: 'curl -f http://localhost:8080/api/ || exit 1'

    volumes: &ref_1
      - '${SERVICE_DIR}/config:/etc/netbox/config:z,ro'
      - '${REMOTE_MOUNT_DIR}/media:/opt/netbox/netbox/media:rw'
      - '${REMOTE_MOUNT_DIR}/reports:/opt/netbox/netbox/reports:rw'
      - '${REMOTE_MOUNT_DIR}/scripts:/opt/netbox/netbox/scripts:rw'

  netbox-worker:
    image: docker.io/netboxcommunity/netbox:${VERSION-v4.3-3.3.0}
    depends_on:
      netbox:
        condition: service_healthy
    environment: *ref_0

    user: 'unit:root'
    healthcheck:
      start_period: 20s
      timeout: 3s
      interval: 15s
      test: ps -aux | grep -v grep | grep -q rqworker || exit 1
    volumes: *ref_1
    command:
      - /opt/netbox/venv/bin/python
      - /opt/netbox/netbox/manage.py
      - rqworker

  netbox-housekeeping:
    image: docker.io/netboxcommunity/netbox:${VERSION-v4.3-3.3.0}
    depends_on:
      netbox:
        condition: service_healthy
    environment: *ref_0

    user: 'unit:root'

    healthcheck:
      start_period: 20s
      timeout: 3s
      interval: 15s
      test: ps -aux | grep -v grep | grep -q housekeeping || exit 1

    volumes: *ref_1
    command:
      - /opt/netbox/housekeeping.sh

  postgres:
    image: docker.io/postgres:17-alpine
    environment:
      - 'POSTGRES_DB=${POSTGRES_DB}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_USER=${POSTGRES_USER}'
      # - PUID=${USER_ID}
      # - PGID=${GROUP_ID}

    volumes:
      - '${REMOTE_MOUNT_DIR}/postgres:/var/lib/postgresql/data'

  redis:
    image: docker.io/valkey/valkey:8.1-alpine
    command:
      - sh
      - '-c'
      - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD
    environment:
      - 'REDIS_PASSWORD=${REDIS_PASSWORD}'
      # - PUID=${USER_ID}
      # - PGID=${GROUP_ID}

    volumes:
      - '${REMOTE_MOUNT_DIR}/redis-data:/data'

  redis-cache:
    image: docker.io/valkey/valkey:8.1-alpine
    command:
      - sh
      - '-c'
      - redis-server --requirepass $$REDIS_PASSWORD
    environment:
      - 'REDIS_PASSWORD=${REDIS_CACHE_PASSWORD}'
    volumes:
      - '${REMOTE_MOUNT_DIR}/redis-cache:/data'
